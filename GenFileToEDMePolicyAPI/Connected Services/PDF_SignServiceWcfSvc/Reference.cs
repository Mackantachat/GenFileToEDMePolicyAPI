//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PDF_SignServiceWcfSvc
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessResult", Namespace="http://schemas.datacontract.org/2004/07/DigitalSecurityService")]
    internal partial class ProcessResult : object
    {
        
        private string ErrorMessageField;
        
        private bool SuccessedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Successed
        {
            get
            {
                return this.SuccessedField;
            }
            set
            {
                this.SuccessedField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PDF_SignServiceWcfSvc.IPDF_SignService")]
    internal interface IPDF_SignService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDF_SignService/KeySelectedPdfSign", ReplyAction="http://tempuri.org/IPDF_SignService/KeySelectedPdfSignResponse")]
        PDF_SignServiceWcfSvc.KeySelectedPdfSignResponse KeySelectedPdfSign(PDF_SignServiceWcfSvc.KeySelectedPdfSignRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDF_SignService/KeySelectedPdfSign", ReplyAction="http://tempuri.org/IPDF_SignService/KeySelectedPdfSignResponse")]
        System.Threading.Tasks.Task<PDF_SignServiceWcfSvc.KeySelectedPdfSignResponse> KeySelectedPdfSignAsync(PDF_SignServiceWcfSvc.KeySelectedPdfSignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDF_SignService/KeySelectedPdfSignWithPassword", ReplyAction="http://tempuri.org/IPDF_SignService/KeySelectedPdfSignWithPasswordResponse")]
        PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordResponse KeySelectedPdfSignWithPassword(PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPDF_SignService/KeySelectedPdfSignWithPassword", ReplyAction="http://tempuri.org/IPDF_SignService/KeySelectedPdfSignWithPasswordResponse")]
        System.Threading.Tasks.Task<PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordResponse> KeySelectedPdfSignWithPasswordAsync(PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeySelectedPdfSign", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class KeySelectedPdfSignRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] inputData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int slotIndex;
        
        public KeySelectedPdfSignRequest()
        {
        }
        
        public KeySelectedPdfSignRequest(byte[] inputData, int slotIndex)
        {
            this.inputData = inputData;
            this.slotIndex = slotIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeySelectedPdfSignResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class KeySelectedPdfSignResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public PDF_SignServiceWcfSvc.ProcessResult KeySelectedPdfSignResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public byte[] signedData;
        
        public KeySelectedPdfSignResponse()
        {
        }
        
        public KeySelectedPdfSignResponse(PDF_SignServiceWcfSvc.ProcessResult KeySelectedPdfSignResult, byte[] signedData)
        {
            this.KeySelectedPdfSignResult = KeySelectedPdfSignResult;
            this.signedData = signedData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeySelectedPdfSignWithPassword", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class KeySelectedPdfSignWithPasswordRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public byte[] inputData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int slotIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string OwnerPassword;
        
        public KeySelectedPdfSignWithPasswordRequest()
        {
        }
        
        public KeySelectedPdfSignWithPasswordRequest(byte[] inputData, int slotIndex, string OwnerPassword)
        {
            this.inputData = inputData;
            this.slotIndex = slotIndex;
            this.OwnerPassword = OwnerPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeySelectedPdfSignWithPasswordResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    internal partial class KeySelectedPdfSignWithPasswordResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public PDF_SignServiceWcfSvc.ProcessResult KeySelectedPdfSignWithPasswordResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public byte[] signedData;
        
        public KeySelectedPdfSignWithPasswordResponse()
        {
        }
        
        public KeySelectedPdfSignWithPasswordResponse(PDF_SignServiceWcfSvc.ProcessResult KeySelectedPdfSignWithPasswordResult, byte[] signedData)
        {
            this.KeySelectedPdfSignWithPasswordResult = KeySelectedPdfSignWithPasswordResult;
            this.signedData = signedData;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    internal interface IPDF_SignServiceChannel : PDF_SignServiceWcfSvc.IPDF_SignService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    internal partial class PDF_SignServiceClient : System.ServiceModel.ClientBase<PDF_SignServiceWcfSvc.IPDF_SignService>, PDF_SignServiceWcfSvc.IPDF_SignService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PDF_SignServiceClient() : 
                base(PDF_SignServiceClient.GetDefaultBinding(), PDF_SignServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPDF_SignService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PDF_SignServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PDF_SignServiceClient.GetBindingForEndpoint(endpointConfiguration), PDF_SignServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PDF_SignServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PDF_SignServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PDF_SignServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PDF_SignServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PDF_SignServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PDF_SignServiceWcfSvc.KeySelectedPdfSignResponse PDF_SignServiceWcfSvc.IPDF_SignService.KeySelectedPdfSign(PDF_SignServiceWcfSvc.KeySelectedPdfSignRequest request)
        {
            return base.Channel.KeySelectedPdfSign(request);
        }
        
        public PDF_SignServiceWcfSvc.ProcessResult KeySelectedPdfSign(byte[] inputData, int slotIndex, out byte[] signedData)
        {
            PDF_SignServiceWcfSvc.KeySelectedPdfSignRequest inValue = new PDF_SignServiceWcfSvc.KeySelectedPdfSignRequest();
            inValue.inputData = inputData;
            inValue.slotIndex = slotIndex;
            PDF_SignServiceWcfSvc.KeySelectedPdfSignResponse retVal = ((PDF_SignServiceWcfSvc.IPDF_SignService)(this)).KeySelectedPdfSign(inValue);
            signedData = retVal.signedData;
            return retVal.KeySelectedPdfSignResult;
        }
        
        public System.Threading.Tasks.Task<PDF_SignServiceWcfSvc.KeySelectedPdfSignResponse> KeySelectedPdfSignAsync(PDF_SignServiceWcfSvc.KeySelectedPdfSignRequest request)
        {
            return base.Channel.KeySelectedPdfSignAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordResponse PDF_SignServiceWcfSvc.IPDF_SignService.KeySelectedPdfSignWithPassword(PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordRequest request)
        {
            return base.Channel.KeySelectedPdfSignWithPassword(request);
        }
        
        public PDF_SignServiceWcfSvc.ProcessResult KeySelectedPdfSignWithPassword(byte[] inputData, int slotIndex, string OwnerPassword, out byte[] signedData)
        {
            PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordRequest inValue = new PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordRequest();
            inValue.inputData = inputData;
            inValue.slotIndex = slotIndex;
            inValue.OwnerPassword = OwnerPassword;
            PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordResponse retVal = ((PDF_SignServiceWcfSvc.IPDF_SignService)(this)).KeySelectedPdfSignWithPassword(inValue);
            signedData = retVal.signedData;
            return retVal.KeySelectedPdfSignWithPasswordResult;
        }
        
        public System.Threading.Tasks.Task<PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordResponse> KeySelectedPdfSignWithPasswordAsync(PDF_SignServiceWcfSvc.KeySelectedPdfSignWithPasswordRequest request)
        {
            return base.Channel.KeySelectedPdfSignWithPasswordAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPDF_SignService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPDF_SignService))
            {
                return new System.ServiceModel.EndpointAddress("http://blahqhsmip01.bla.co.th:88/DigitalSecurityService/PDF_SignService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PDF_SignServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPDF_SignService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PDF_SignServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPDF_SignService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPDF_SignService,
        }
    }
}
